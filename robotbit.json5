{
  id: "futureboard_robotbit",
  color1: "#1395BA",
  color2: "#107895",
  color3: "#107895",
  name: "$$futureboard_title_robotbit",
  initcode: ['import robotbit', 'robot = robotbit.RobotBit()'],
  blocks: [
    {
      opcode: "rbmotor",
      blockType: "command",
      text: "$$futureboard_rb_motor",
      // isAsync: true,
      pycode: "robot.motor([MOTOR],[SPD])",
      arguments: {
        MOTOR: {
          type: "string",
          defaultValue: "1",
          menu: "MOTORS",
        },
        SPD: {
          type: "slider",
          defaultValue: 100,
          min: -255,
          max: 255,
        },
      },
    },
    // {
    //   opcode: "rbmotor2",
    //   blockType: "command",
    //   text: "$$futureboard_rb_motor2",
    //   isAsync: true,
    //   pycode: "robot.motor([[MOTOR1],[MOTOR2]],[[SPD1],[SPD2]])",
    //   arguments: {
    //     MOTOR1: {
    //       type: "string",
    //       defaultValue: "1",
    //       menu: "MOTORS",
    //     },
    //     SPD1: {
    //       type: "slider",
    //       defaultValue: 100,
    //       min: -255,
    //       max: 255,
    //     },
    //     MOTOR2: {
    //       type: "string",
    //       defaultValue: "2",
    //       menu: "MOTORS",
    //     },
    //     SPD2: {
    //       type: "slider",
    //       defaultValue: 100,
    //       min: -255,
    //       max: 255,
    //     },
    //   },
    // },
    {
      opcode: "rbmotorstopall",
      blockType: "command",
      text: "$$futureboard_rb_motor_stopall",
      // isAsync: true,
      pycode: "robot.motorStopAll()",
    },
    {
      opcode: "rbservo",
      blockType: "command",
      text: "$$futureboard_rb_servo",
      // isAsync: true,
      pycode: "robot.servo([PORT], [DEG])",
      arguments: {
        PORT: {
          type: "string",
          defaultValue: "1",
          menu: "servoIndex",
        },
        DEG: {
          type: "slider",
          defaultValue: 90,
          min: 0,
          max: 180,
        },
      },
    },
    {
      opcode: "rbgeek9gservo",
      blockType: "command",
      text: "$$futureboard_rb_geek9gservo",
      // isAsync: true,
      pycode: "robot.geekServo9g([PORT], [DEG])",
      arguments: {
        PORT: {
          type: "string",
          defaultValue: "1",
          menu: "servoIndex",
        },
        DEG: {
          type: "slider",
          defaultValue: 90,
          min: -45,
          max: 225,
        },
      },
    },
    {
      opcode: "rbgeek2kgservo",
      blockType: "command",
      text: "$$futureboard_rb_geek2kgservo",
      // isAsync: true,
      pycode: "robot.geekServo2kg([PORT], [DEG])",
      arguments: {
        PORT: {
          type: "string",
          defaultValue: "1",
          menu: "servoIndex",
        },
        DEG: {
          type: "slider",
          defaultValue: 90,
          min: 0,
          max: 360,
        },
      },
    },
    {
      opcode: "rbstepper",
      blockType: "command",
      text: "$$futureboard_rb_stepper",
      // isAsync: true,
      pycode: "robot.stepperDual([DEG1], [DEG2])",
      arguments: {
        DEG1: {
          type: "number",
          defaultValue: 360,
        },
        DEG2: {
          type: "number",
          defaultValue: -360,
        },
      },
    },
    {
      opcode: "rbstepperdegree",
      blockType: "command",
      text: "$$futureboard_rb_stepperdegree",
      // isAsync: true,
      pycode: "robot.stepperDegree([M1M2], [DEG])",
      arguments: {
        M1M2: {
          type: "string",
          defaultValue: "1",
          menu: "M1M2",
        },
        DEG: {
          type: "number",
          defaultValue: 360,
        },
      },
    },
  ],
  menus: {
    MOTORS: [
      { text: "M1A", value: "1" },
      { text: "M1B", value: "2" },
      { text: "M2A", value: "3" },
      { text: "M2B", value: "4" },
    ],
    M1M2: [
      // {text: 'ALL', value: '0'}, // to implement in firmware~
      { text: "M1", value: "1" },
      { text: "M2", value: "2" },
    ],
    servoIndex: [
      { text: "S1", value: "1" },
      { text: "S2", value: "2" },
      { text: "S3", value: "3" },
      { text: "S4", value: "4" },
      { text: "S5", value: "5" },
      { text: "S6", value: "6" },
      { text: "S7", value: "7" },
      { text: "S8", value: "8" },
    ],
  },
}
