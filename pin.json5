{
  libs: {
    "[PIN]_in": {
      instance: "MeowPin('[PIN]', 'IN')",
      keywords: ['MeowPin']
    },
    "[PIN]_out": {
      instance: "MeowPin('[PIN]', 'OUT')"
    },
    "[PIN]_analog": {
      instance: "MeowPin('[PIN]', 'ANALOG')"
    },
    "[PIN]_pwm": {
      instance: "MeowPin('[PIN]', 'PWM')"
    }
  },
  blocks: [
    "## $$futureboard_title_pin",
    {
      opcode: 'pingetDigital',
      text: '$$futureboard_pin_getDigital',
      blockType: 'Boolean',
      disableMonitor: 1,
      isImportMulty: true,
      arguments: {
        PIN: {
          type: 'value',
          defaultValue: 'P0',
          menu: 'PINS_DIG',
        },
      },
      // importCode is aligned to instance
      pycode: '[PIN]_in.getDigital()',
    },
    {
      opcode: 'pinsetDigital',
      text: '$$futureboard_pin_setDigital',
      blockType: 'command',
      isImportMulty: true,
      arguments: {
        PIN: {
          type: 'value',
          defaultValue: 'P0',
          menu: 'PINS_DIG',
        },
        MODE: {
          type: 'slider',
          defaultValue: 1,
          max: 1,
          min: 0,
        },
      },
      pycode: '[PIN]_out.setDigital([MODE])',
    },
    {
      opcode: 'pingetAnalog',
      text: '$$futureboard_pin_getAnalog',
      blockType: 'reporter',
      disableMonitor: 1,
      isImportMulty: true,
      arguments: {
        PIN: {
          type: 'value',
          defaultValue: 'P0',
          menu: 'PINS_ANALOG_READ',
        },
        WIDTH: {
          type: 'string',
          menu: 'pinWidth',
          defaultValue: 12,
        },
      },
      pycode: '[PIN]_analog.getAnalog([WIDTH])',
    },
    {
      opcode: 'pinsetAnalog',
      text: '$$futureboard_pin_setAnalog',
      blockType: 'command',
      isImportMulty: true,
      arguments: {
        PIN: {
          type: 'value',
          defaultValue: 'P0',
          menu: 'PINS_ANALOG_WRITE',
        },
        VALUE: {
          type: 'slider',
          defaultValue: 1023,
          max: 1023,
          min: 0,
        },
      },
      pycode: '[PIN]_pwm.setAnalog([VALUE])',
    },
    '---'
  ],
}